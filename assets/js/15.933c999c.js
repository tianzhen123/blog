(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{374:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("[TOC]")]),t._v(" "),s("h2",{attrs:{id:"有哪些常用的meta标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有哪些常用的meta标签"}},[t._v("#")]),t._v(" 有哪些常用的meta标签？")]),t._v(" "),s("p",[t._v("meta标签由name和content两个属性来定义，来描述一个HTML网页文档的"),s("code",[t._v("元信息")]),t._v("，例如作者、日期和时间、网页描述、关键词、页面刷新等，除了一些http标准规定了一些name作为大家使用的共识，开发者也可以自定义name。")]),t._v(" "),s("ul",[s("li",[t._v("charset，用于描述HTML文档的编码形式")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UTF-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("http-equiv，顾名思义，相当于http的文件头作用,比如下面的代码就可以设置http的缓存过期日期")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("expires"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Wed, 20 Jun 2019 22:33:00 GMT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("viewport，移动前端最熟悉不过，Web开发人员可以控制视口的大小和比例")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width, initial-scale=1, maximum-scale=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ul",[s("li",[t._v("apple-mobile-web-app-status-bar-style,开发过PWA应用的开发者应该很熟悉，为了自定义苹果工具栏的颜色。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("apple-mobile-web-app-status-bar-style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("black-translucent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"前端优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端优化"}},[t._v("#")]),t._v(" 前端优化")]),t._v(" "),s("p",[s("code",[t._v("https://mp.weixin.qq.com/s/3DoBc9qOA-MJaVH260SvUw")])]),t._v(" "),s("h3",{attrs:{id:"行内元素-a-strong-b-em-i-del-s-u-span-和块元素-h1-h6、p、div、ul、ol-、li"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内元素-a-strong-b-em-i-del-s-u-span-和块元素-h1-h6、p、div、ul、ol-、li"}},[t._v("#")]),t._v(" 行内元素（a，strong，b，em，i，del，s，u，span）和块元素（h1~h6、p、div、ul、ol 、li）")]),t._v(" "),s("p",[t._v("​\t之间的转换 display:inline  display:block")]),t._v(" "),s("h2",{attrs:{id:"translate-移动-transform的一个方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#translate-移动-transform的一个方法"}},[t._v("#")]),t._v(" translate:移动，transform的一个方法")]),t._v(" "),s("ul",[s("li",[t._v("通过 translate() 方法，元素从其当前位置移动，根据给定的 left（x 坐标） 和 top（y 坐标） 位置参数：")])]),t._v(" "),s("p",[t._v("​     用法transform: translate(50px, 100px);")]),t._v(" "),s("ul",[s("li",[t._v("transform:变形。改变")])]),t._v(" "),s("p",[t._v("​         CSS3中主要包括 旋转：rotate() 顺时针旋转给定的角度，允许负值 rotate(30deg)")]),t._v(" "),s("p",[t._v("​          扭曲、缩放、 移动")]),t._v(" "),s("ul",[s("li",[t._v("transition: 允许CSS属性值在一定的时间区间内平滑的过渡，")])]),t._v(" "),s("p",[t._v("​      需要事件的触发，例如单击、获取焦点、失去焦点等")]),t._v(" "),s("p",[t._v("​\t\ttransition:property duration timing-function delay;")]),t._v(" "),s("p",[t._v("​\t\tproperty:CSS的属性，例如：width height 为none时停止所有的运动，可以为transform")]),t._v(" "),s("p",[t._v("​          duration:持续时间")]),t._v(" "),s("p",[t._v("​          timing-function:ease等")]),t._v(" "),s("p",[t._v("​          delay:延迟")]),t._v(" "),s("h2",{attrs:{id:"前端有哪些页面优化方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端有哪些页面优化方法"}},[t._v("#")]),t._v(" 前端有哪些页面优化方法?")]),t._v(" "),s("ul",[s("li",[t._v("减少 HTTP请求数")]),t._v(" "),s("li",[t._v("从设计实现层面简化页面")]),t._v(" "),s("li",[t._v("合理设置 HTTP缓存")]),t._v(" "),s("li",[t._v("资源合并与压缩")]),t._v(" "),s("li",[t._v("合并 CSS图片，减少请求数的又一个好办法。")]),t._v(" "),s("li",[t._v("将外部脚本置底（将脚本内容在页面信息内容加载后再加载）")]),t._v(" "),s("li",[t._v("多图片网页使用图片懒加载。")]),t._v(" "),s("li",[t._v("在js中尽量减少闭包的使用")]),t._v(" "),s("li",[t._v("尽量合并css和js文件")]),t._v(" "),s("li",[t._v("尽量使用字体图标或者SVG图标，来代替传统的PNG等格式的图片")]),t._v(" "),s("li",[t._v("减少对DOM的操作")]),t._v(" "),s("li",[t._v("在JS中避免“嵌套循环”和 “死循环”")]),t._v(" "),s("li",[t._v("尽可能使用事件委托（事件代理）来处理事件绑定的操作")])]),t._v(" "),s("h2",{attrs:{id:"当前端项目更新后-如何保证用户访问的页面是最新的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当前端项目更新后-如何保证用户访问的页面是最新的"}},[t._v("#")]),t._v(" 当前端项目更新后，如何保证用户访问的页面是最新的")]),t._v(" "),s("p",[t._v("以vue为例，vue在打包的时候，css和js名字都加了哈希值，所以改动后打包生成的js和css是唯一的，页面请求的是新资源，不会有缓存问题。但是入口文件index.html会因为缓存造成更新问题，如果我们更新了，但是浏览器使用的是缓存，就会出现问题。所以需要对入口文件设置不使用强制缓存，需要每次去服务器验证文件是否修改，即使用协商缓存。")]),t._v(" "),s("div",{staticClass:"language-nginx extra-class"},[s("pre",{pre:!0,attrs:{class:"language-nginx"}},[s("code",[t._v("使用nginx反向代理，在nginx.conf文件的对应server中设置，目前我自己实践出的可行的一种写法是：\n\n"),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("listen")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server_name")]),t._v("  域名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v("   文件目录")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("index")]),t._v("  index.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  // 不加这一句，会出现nginx欢迎页面，无法正确加载资源\n\n      "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$uri")]),t._v(" /index.html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ocation")]),t._v(" ~ .*\\.(html)$")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  // 对html文件限制缓存\n\n      "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Cache-Control no-store")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  // 不缓存\n\n     // 或者用add_header "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Cache-Control")]),t._v(" no-cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 替代上面那一句，协商缓存\n\n      "),s("span",{pre:!0,attrs:{class:"token directive"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("add_header")]),t._v(" Pragma no-cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("1）Cache-Control: no-cache和Cache-Control: no-store区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("看字面意思容易误解，no-cache就是不缓存，但是no-cache并不是不缓存，而是使用协商缓存，所以并不能禁止缓存，no-store才是真正的禁止缓存。从节省带宽角度讲，使用no-cache更优一点，文件未发生改变时只传输很小的报文大小，只有在文件改变时才会传输整个文件大小。而不是no-store不管什么情况都传输整个文件大小。\n")])])]),s("p",[t._v("（2）Pragma: no-cache：和Cache-Control: no-cache区别")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("Pragma: no-cache跟Cache-Control: no-cache相同，Pragma: no-cache兼容http 1.0 ，Cache-Control: no-cache是http 1.1提供的。因此，Pragma: no-cache可以应用到http 1.0 和http 1.1,而Cache-Control: no-cache只能应用于http 1.1.\n")])])]),s("h2",{attrs:{id:"前端安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端安全"}},[t._v("#")]),t._v(" 前端安全")]),t._v(" "),s("h3",{attrs:{id:"_1-xss-攻击者想尽一切办法将可以执行的代码注入到网页中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-xss-攻击者想尽一切办法将可以执行的代码注入到网页中"}},[t._v("#")]),t._v(" 1. XSS：攻击者想尽一切办法将可以执行的代码注入到网页中")]),t._v(" "),s("h4",{attrs:{id:"转义字符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转义字符"}},[t._v("#")]),t._v(" 转义字符")]),t._v(" "),s("p",[t._v("首先，对于用户的输入应该是永远不信任的。最普遍的做法就是转义输入输出的内容，对于引号、尖括号、斜杠进行转义；但是对于显示富文本，通常采用白名单过滤的办法，常用js-xss 来实现")]),t._v(" "),s("h4",{attrs:{id:"csp建立白名单-两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csp建立白名单-两种方式"}},[t._v("#")]),t._v(" CSP建立白名单，两种方式")]),t._v(" "),s("ul",[s("li",[t._v("设置 HTTP Header 中的 Content-Security-Policy")]),t._v(" "),s("li",[t._v("设置 meta 标签的方式 "),s("meta",{attrs:{"http-equiv":"Content-Security-Policy"}})])]),t._v(" "),s("h3",{attrs:{id:"_2-csrf-跨站请求伪造。原理就是攻击者构造出一个后端请求地址-诱导用户点击或者通过某些途径自动发起请求。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-csrf-跨站请求伪造。原理就是攻击者构造出一个后端请求地址-诱导用户点击或者通过某些途径自动发起请求。"}},[t._v("#")]),t._v(" 2. CSRF：跨站请求伪造。原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。")]),t._v(" "),s("p",[t._v("防范 CSRF 攻击可以遵循以下几种规则：")]),t._v(" "),s("ul",[s("li",[t._v("Get 请求不对数据进行修改")]),t._v(" "),s("li",[t._v("不让第三方网站访问到用户 Cookie")]),t._v(" "),s("li",[t._v("阻止第三方网站请求接口")]),t._v(" "),s("li",[t._v("请求时附带验证信息，比如验证码或者 Token")])]),t._v(" "),s("h4",{attrs:{id:"samesite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#samesite"}},[t._v("#")]),t._v(" SameSite")]),t._v(" "),s("p",[t._v("可以对 Cookie 设置 SameSite 属性。该属性表示 Cookie 不随着跨域请求发送，可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。")]),t._v(" "),s("h4",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" Token")]),t._v(" "),s("p",[t._v("服务器下发一个随机 Token，每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。")]),t._v(" "),s("h3",{attrs:{id:"_3-中间人攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-中间人攻击"}},[t._v("#")]),t._v(" 3. 中间人攻击")]),t._v(" "),s("p",[t._v("中间人攻击是攻击方同时与服务端和客户端建立起了连接，并让对方认为连接是安全的，但是实际上整个通信过程都被攻击者控制了。攻击者不仅能获得双方的通信信息，还能修改通信信息。")]),t._v(" "),s("p",[t._v("防御：HTTPS 就可以用来防御中间人攻击，但是并不是说使用了 HTTPS 就可以高枕无忧了，因为如果你没有完全关闭 HTTP 访问的话，攻击方可以通过某些方式将 HTTPS 降级为 HTTP 从而实现中间人攻击。")])])}),[],!1,null,null,null);a.default=n.exports}}]);