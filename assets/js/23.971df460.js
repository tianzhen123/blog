(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{381:function(e,v,_){"use strict";_.r(v);var o=_(44),d=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"directive-自定义指令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#directive-自定义指令"}},[e._v("#")]),e._v(" directive 自定义指令")]),e._v(" "),_("h2",{attrs:{id:"钩子函数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数"}},[e._v("#")]),e._v(" 钩子函数")]),e._v(" "),_("p",[e._v("一个指令定义对象可以提供如下几个钩子函数 (均为可选)：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("bind")]),e._v("：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。")]),e._v(" "),_("li",[_("code",[e._v("inserted")]),e._v("：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。")]),e._v(" "),_("li",[_("code",[e._v("update")]),e._v("：所在组件的 VNode 更新时调用，"),_("strong",[e._v("但是可能发生在其子 VNode 更新之前")]),e._v("。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。")]),e._v(" "),_("li",[_("code",[e._v("componentUpdated")]),e._v("：指令所在组件的 VNode "),_("strong",[e._v("及其子 VNode")]),e._v(" 全部更新后调用。")]),e._v(" "),_("li",[_("code",[e._v("unbind")]),e._v("：只调用一次，指令与元素解绑时调用。")])]),e._v(" "),_("h2",{attrs:{id:"钩子函数参数"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数参数"}},[e._v("#")]),e._v(" 钩子函数参数")]),e._v(" "),_("p",[e._v("指令钩子函数会被传入以下参数：")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("el")]),e._v("：指令所绑定的元素，可以用来直接操作 DOM。")]),e._v(" "),_("li",[_("code",[e._v("binding")]),e._v("：一个对象，包含以下 property：\n"),_("ul",[_("li",[_("code",[e._v("name")]),e._v("：指令名，不包括 "),_("code",[e._v("v-")]),e._v(" 前缀。")]),e._v(" "),_("li",[_("code",[e._v("value")]),e._v("：指令的绑定值，例如："),_("code",[e._v('v-my-directive="1 + 1"')]),e._v(" 中，绑定值为 "),_("code",[e._v("2")]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("oldValue")]),e._v("：指令绑定的前一个值，仅在 "),_("code",[e._v("update")]),e._v(" 和 "),_("code",[e._v("componentUpdated")]),e._v(" 钩子中可用。无论值是否改变都可用。")]),e._v(" "),_("li",[_("code",[e._v("expression")]),e._v("：字符串形式的指令表达式。例如 "),_("code",[e._v('v-my-directive="1 + 1"')]),e._v(" 中，表达式为 "),_("code",[e._v('"1 + 1"')]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("arg")]),e._v("：传给指令的参数，可选。例如 "),_("code",[e._v("v-my-directive:foo")]),e._v(" 中，参数为 "),_("code",[e._v('"foo"')]),e._v("。")]),e._v(" "),_("li",[_("code",[e._v("modifiers")]),e._v("：一个包含修饰符的对象。例如："),_("code",[e._v("v-my-directive.foo.bar")]),e._v(" 中，修饰符对象为 "),_("code",[e._v("{ foo: true, bar: true }")]),e._v("。")])])]),e._v(" "),_("li",[_("code",[e._v("vnode")]),e._v("：Vue 编译生成的虚拟节点。移步 "),_("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#VNode-%E6%8E%A5%E5%8F%A3",target:"_blank",rel:"noopener noreferrer"}},[e._v("VNode API"),_("OutboundLink")],1),e._v(" 来了解更多详情。")]),e._v(" "),_("li",[_("code",[e._v("oldVnode")]),e._v("：上一个虚拟节点，仅在 "),_("code",[e._v("update")]),e._v(" 和 "),_("code",[e._v("componentUpdated")]),e._v(" 钩子中可用。")])])])}),[],!1,null,null,null);v.default=d.exports}}]);