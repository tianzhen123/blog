(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{377:function(t,v,_){"use strict";_.r(v);var s=_(44),e=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"表格细线合并边框"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表格细线合并边框"}},[t._v("#")]),t._v(" 表格细线合并边框")]),t._v(" "),_("ul",[_("li",[t._v("table{border-collapse: collapse;}")])]),t._v(" "),_("h3",{attrs:{id:"css3盒模型属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css3盒模型属性"}},[t._v("#")]),t._v(" CSS3盒模型属性")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("box-sizing:content-box ：默认值，让元素维持w3c的标准盒模型。")]),t._v(" "),_("ul",[_("li",[t._v("盒模型的宽高 = content的宽高")])])]),t._v(" "),_("li",[_("strong",[t._v("box-sizing:border-box：此值会重新定义CSS2.1中盒模型组成的模式，让元素维持IE传统盒模型")]),t._v("。\n"),_("ul",[_("li",[t._v("盒模型的宽高 = content的宽高 + padding + border")])])])]),t._v(" "),_("h3",{attrs:{id:"css定位"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css定位"}},[t._v("#")]),t._v(" css定位")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("static（默认）：按照正常文档流进行排列；")])]),t._v(" "),_("li",[_("p",[t._v("fixed (固定定位)：所固定的参照对像是可视窗口。")])]),t._v(" "),_("li",[_("p",[t._v("relative（相对定位）(自恋型)")]),t._v(" "),_("ul",[_("li",[t._v("不脱离文档流，仍占有位置，参考自身静态位置通过 top, bottom, left, right 定位")])])]),t._v(" "),_("li",[_("p",[t._v("absolute（绝对定位）(拼爹型)")]),t._v(" "),_("ul",[_("li",[t._v("脱离了文档流，不占有位置，参考距其最近一个不为static的父级元素通过top, bottom, left, right 定位")])])])]),t._v(" "),_("ul",[_("li",[t._v("子绝父相\n"),_("ul",[_("li",[t._v("子元素用绝对定位，父元素用相对定位")])])])]),t._v(" "),_("h3",{attrs:{id:"flex-轴-和-容器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flex-轴-和-容器"}},[t._v("#")]),t._v(" "),_("a",{attrs:{href:"https://juejin.im/post/58e3a5a0a0bb9f0069fc16bb",target:"_blank",rel:"noopener noreferrer"}},[t._v("flex"),_("OutboundLink")],1),t._v(" ：轴 和 容器")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("flex"),_("code",[t._v("属性是")]),t._v("flex-grow"),_("code",[t._v(",")]),t._v("flex-shrink"),_("code",[t._v("和")]),t._v("flex-basis"),_("code",[t._v("的简写，默认值为")]),t._v("0 1 auto")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("flex-grow")]),t._v("属性定义项目的放大比例，默认为"),_("code",[t._v("0")]),t._v("，即如果存在剩余空间，也不放大。")]),t._v(" "),_("li",[_("code",[t._v("flex-shrink")]),t._v("属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),t._v(" "),_("li",[_("code",[t._v("flex-basis")]),t._v("属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为"),_("code",[t._v("auto")]),t._v("，即项目的本来大小。")])])]),t._v(" "),_("li",[_("p",[t._v("容器：包括 父容器和子容器")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("父容器")]),t._v(" "),_("ul",[_("li",[t._v("设置子容器沿主轴排列："),_("strong",[t._v("justify-content")]),t._v("："),_("strong",[t._v("flex-start")]),t._v("/"),_("strong",[t._v("flex-end")]),t._v("/"),_("strong",[t._v("center")]),t._v("/"),_("strong",[t._v("space-around")]),t._v("/"),_("strong",[t._v("space-between")])]),t._v(" "),_("li",[t._v("设置子容器如何沿交叉轴排列："),_("strong",[t._v("align-items")]),t._v("："),_("strong",[t._v("flex-start")]),t._v("/"),_("strong",[t._v("flex-end")]),t._v("/"),_("strong",[t._v("center")]),t._v("/"),_("strong",[t._v("baseline")]),t._v("/"),_("strong",[t._v("stretch")])])])]),t._v(" "),_("li",[_("p",[t._v("子容器")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("在主轴上如何伸缩："),_("strong",[t._v("flex")])])]),t._v(" "),_("li",[_("p",[t._v("单独设置子容器如何沿交叉轴排列："),_("strong",[t._v("align-self")])]),t._v(" "),_("blockquote",[_("p",[_("strong",[t._v("flex-start")]),t._v("：起始端对齐")]),t._v(" "),_("p",[_("strong",[t._v("flex-end")]),t._v("：末尾段对齐")]),t._v(" "),_("p",[_("strong",[t._v("center")]),t._v("：居中对齐")]),t._v(" "),_("p",[_("strong",[t._v("baseline")]),t._v("：基线对齐")]),t._v(" "),_("p",[_("strong",[t._v("stretch")]),t._v("：拉伸对齐")])])])])])])]),t._v(" "),_("li",[_("p",[t._v("轴：包括 主轴和交叉轴")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("主轴:")]),t._v(" "),_("blockquote",[_("p",[t._v("向右："),_("code",[t._v("flex-direction: row")])]),t._v(" "),_("p",[t._v("向下："),_("code",[t._v("flex-direction: column")])]),t._v(" "),_("p",[t._v("向左："),_("code",[t._v("flex-direction: row-reverse")])]),t._v(" "),_("p",[t._v("向上："),_("code",[t._v("flex-direction: column-reverse")])])])]),t._v(" "),_("li",[_("p",[t._v("交叉轴")]),t._v(" "),_("blockquote",[_("div",{staticClass:"language-css extra-class"},[_("pre",{pre:!0,attrs:{class:"language-css"}},[_("code",[_("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])])])])]),t._v(" "),_("h3",{attrs:{id:"css-三大特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css-三大特性"}},[t._v("#")]),t._v(" css 三大特性")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("css 层叠性")])]),t._v(" "),_("li",[_("p",[t._v("css继承性（子承父业）")])]),t._v(" "),_("li",[_("p",[t._v("css 优先级")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"left"}},[t._v("分类")]),t._v(" "),_("th",[t._v("权重大小")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("继承 或 *")]),t._v(" "),_("td",[t._v("0,0,0,0")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("元素标签(例：p,div)")]),t._v(" "),_("td",[t._v("0,0,0,1")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("类选择器或伪类(  .    :  )")]),t._v(" "),_("td",[t._v("0,0,1,0")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("ID选择器")]),t._v(" "),_("td",[t._v("0,1,0,0")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("行内样式")]),t._v(" "),_("td",[t._v("1,0,0,0")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"left"}},[t._v("Important")]),t._v(" "),_("td",[t._v("最大")])])])]),t._v(" "),_("p",[t._v("例如：")]),t._v(" "),_("ul",[_("li",[t._v("div ul li \t\t    -------\x3e \t0,0,0,3")]),t._v(" "),_("li",[t._v(".nav ul li           -------\x3e     0,0,1,2")]),t._v(" "),_("li",[t._v("a:hover            --------\x3e    0,0,1,1")]),t._v(" "),_("li",[t._v(".nav a              ----------\x3e   0,0,1,1")])])])]),t._v(" "),_("h3",{attrs:{id:"sass、less、stylus区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sass、less、stylus区别"}},[t._v("#")]),t._v(" Sass、Less、Stylus区别")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("什么事CSS预处理器?")]),t._v(" "),_("p",[t._v("CSS预处理器是一种语言用来为CSS增加一些变成的特性，无需考虑浏览器兼容问题，例如你可以在CSS中使用变量，简单的程序逻辑、函数等在编程语言中的一些基本技巧，可以让CSS更加简洁，适应性更强，代码更直观等诸多好处")])]),t._v(" "),_("li",[_("p",[t._v("基本语法区别")]),t._v(" "),_("p",[t._v("Sass是以.sass为扩展名，Less是以.less为扩展名，Stylus是以.styl为扩展名")])]),t._v(" "),_("li",[_("p",[t._v("变量的区别")]),t._v(" "),_("p",[t._v("Sass 变量必须是以$开头的，然后变量和值之间使用冒号（：）隔开，和css属性是一样的。")]),t._v(" "),_("p",[t._v("Less 变量是以@开头的，其余sass都是一样的。")]),t._v(" "),_("p",[t._v("Stylus 对变量是没有任何设定的，可以是以$开头或者任意字符，而且变量之间可以冒号，空格隔开，但是在stylus中不能用@开头")])]),t._v(" "),_("li",[_("p",[t._v("三种预处理器都有：嵌套、运算符、颜色函数、导入、继承、混入。Stylus还有一些高级特性。例如循环、判断等")])])]),t._v(" "),_("h3",{attrs:{id:"重绘和回流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流"}},[t._v("#")]),t._v(" 重绘和回流")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("当render tree中的一部分(或全部)因为元素的"),_("code",[t._v("规模尺寸，布局，隐藏等改变而需要重新构建。这就称为回流(reflow)")]),t._v("。每个页面至少需要一次回流，就是在页面第一次加载的时候。"),_("code",[t._v("在回流的时候，浏览器会使渲染树中受到影响的部分失效")]),t._v("，并重新构造这部分渲染树，完成回流后，浏览器会重新绘制受影响的部分到屏幕中，该过程成为重绘。")])]),t._v(" "),_("li",[_("p",[t._v("当render tree中的一些元素需要更新属性，而这些属性只是影响"),_("strong",[t._v("元素的外观，风格")]),t._v("，而"),_("code",[t._v("不会影响布局的，比如background-color。则就叫称为重绘")])]),t._v(" "),_("h5",{attrs:{id:"注意-回流必将引起重绘-而重绘不一定会引起回流。"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注意-回流必将引起重绘-而重绘不一定会引起回流。"}},[t._v("#")]),t._v(" 注意：回流必将引起重绘，而重绘不一定会引起回流。")])])]),t._v(" "),_("ul",[_("li",[_("h4",{attrs:{id:"回流何时发生"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#回流何时发生"}},[t._v("#")]),t._v(" 回流何时发生：")]),t._v(" "),_("p",[_("strong",[t._v("当页面布局和几何属性改变时就需要回流。下述情况会发生浏览器回流：")])]),t._v(" "),_("ol",[_("li",[t._v("添加或者删除可见的DOM元素；")]),t._v(" "),_("li",[t._v("元素位置改变；")]),t._v(" "),_("li",[t._v("元素尺寸改变——边距、填充、边框、宽度和高度")]),t._v(" "),_("li",[t._v("内容改变——比如文本改变或者图片大小改变而引起的计算值宽度和高度改变；")]),t._v(" "),_("li",[t._v("页面渲染初始化；")]),t._v(" "),_("li",[t._v("浏览器窗口尺寸改变——resize事件发生时；")])]),t._v(" "),_("h4",{attrs:{id:"常见引起重绘的操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见引起重绘的操作"}},[t._v("#")]),t._v(" 常见引起重绘的操作")]),t._v(" "),_("p",[t._v("color、background、background-position、box-shadow、border-radius等。")]),t._v(" "),_("h4",{attrs:{id:"如何减少回流、重绘"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何减少回流、重绘"}},[t._v("#")]),t._v(" 如何减少回流、重绘")]),t._v(" "),_("p",[t._v("减少回流、重绘其实就是需要减少对render tree的操作"),_("code",[t._v("（合并多次多DOM和样式的修改）")]),t._v("，"),_("code",[t._v("并减少对一些style信息的请求")]),t._v("，尽量利用好浏览器的优化策略。具体方法有：")]),t._v(" "),_("ol",[_("li",[t._v("直接改变className，如果动态改变样式，则使用"),_("strong",[t._v("cssText")]),t._v("（考虑没有优化的浏览器）")]),t._v(" "),_("li",[t._v("让要操作的元素进行”离线处理”，处理完后一起更新\n"),_("ul",[_("li",[t._v("使用DocumentFragment进行缓存操作,引发一次回流和重绘；")]),t._v(" "),_("li",[t._v("使用display:none技术，只引发两次回流和重绘；")]),t._v(" "),_("li",[t._v("使用cloneNode(true or false) 和 replaceChild 技术，引发一次回流和重绘；")])])]),t._v(" "),_("li",[t._v("不要经常访问会引起浏览器flush队列的属性，如果你确实要访问，利用缓存")]),t._v(" "),_("li",[t._v("让元素脱离动画流，减少回流的Render Tree的规模")])])])]),t._v(" "),_("h3",{attrs:{id:"bfc"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),_("ul",[_("li",[t._v("BFC 特性(功能)\n"),_("ul",[_("li",[t._v("形成一个完全独立的空间，让空间里的子元素不会影响外面的布局。")])])]),t._v(" "),_("li",[t._v("触发 BFC 最常用的方式\n"),_("ol",[_("li",[t._v("根元素，即html")]),t._v(" "),_("li",[t._v("float 不为 none")]),t._v(" "),_("li",[t._v("position 不为relative 和 static")]),t._v(" "),_("li",[t._v("overflow 为auto、scroll 和 hidden")]),t._v(" "),_("li",[t._v("display 的值为table-cell 或 inline-block")])])]),t._v(" "),_("li",[t._v("可以解决的问题：\n"),_("ol",[_("li",[t._v("浮动元素高度坍塌的问题")]),t._v(" "),_("li",[t._v("两栏自适应布局")]),t._v(" "),_("li",[t._v("外边距垂直方向重合")])])])]),t._v(" "),_("h3",{attrs:{id:"css3新增伪类有哪些"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#css3新增伪类有哪些"}},[t._v("#")]),t._v(" CSS3新增伪类有哪些？")]),t._v(" "),_("ul",[_("li",[t._v("p:first-of-type 选择属于其父元素的首个元素。")]),t._v(" "),_("li",[t._v("p:last-of-type  选择属于其父元素的最后元素。")]),t._v(" "),_("li",[t._v("p:only-of-type  选择属于其父元素唯一的元素。")]),t._v(" "),_("li",[t._v("p:only-child   选择属于其父元素的唯一子元素的每个元素。")]),t._v(" "),_("li",[t._v("p:nth-child(2)  选择属于其父元素的第二个子元素的每个元素。")]),t._v(" "),_("li",[t._v(":enabled  :disabled 控制表单控件的禁用状态。")]),t._v(" "),_("li",[t._v(":checked     单选框或复选框被选中。")])]),t._v(" "),_("h3",{attrs:{id:"哪些属性可以继承"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#哪些属性可以继承"}},[t._v("#")]),t._v(" 哪些属性可以继承？")]),t._v(" "),_("ol",[_("li",[t._v("可继承的样式：font-size font-family color, text-indent;")]),t._v(" "),_("li",[t._v("不可继承的样式：border padding margin width height;")])]),t._v(" "),_("h3",{attrs:{id:"问题解决"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#问题解决"}},[t._v("#")]),t._v(" 问题解决")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("::before 和 :after中双冒号和单冒号有什么区别？解释一下这2个伪元素的作用")])]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("单冒号(:)用于CSS3伪类，双冒号(::)用于CSS3伪元素。::before就是以一个子元素的存在，定义在元素主体内容之前的一个伪元素。并不存在于dom之中，只存在在页面之中。:before 和 :after 这两个伪元素，是在CSS2.1里新出现的。起初，伪元素的前缀使用的是单冒号语法，但随着Web的进化，在CSS3的规范里，伪元素的语法被修改成使用双冒号，成为::before ::after\n")])])])])]),t._v(" "),_("h3",{attrs:{id:"一行-csss适配-rem"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一行-csss适配-rem"}},[t._v("#")]),t._v(" 一行 csss适配 rem")]),t._v(" "),_("p",[t._v("750 是设计稿宽度：之后的单位直接 1:1使用设计稿的大小，单位是 rem")]),t._v(" "),_("div",{staticClass:"language-css extra-class"},[_("pre",{pre:!0,attrs:{class:"language-css"}},[_("code",[_("span",{pre:!0,attrs:{class:"token selector"}},[t._v("html")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" calc "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 100vw / 750 "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);